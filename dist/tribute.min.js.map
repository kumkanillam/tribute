{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\r\n  Object.defineProperty(Array.prototype, 'find', {\r\n    value: function(predicate) {\r\n      // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw TypeError('predicate must be a function');\r\n      }\r\n\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return kValue.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return kValue;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 7. Return undefined.\r\n      return undefined;\r\n    },\r\n    configurable: true,\r\n    writable: true\r\n  });\r\n}\r\n\r\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\r\n  function CustomEvent(event, params) {\r\n    params = params || {\r\n      bubbles: false,\r\n      cancelable: false,\r\n      detail: undefined\r\n    }\r\n    var evt = document.createEvent('CustomEvent')\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\r\n    return evt\r\n  }\r\n\r\n if (typeof window.Event !== 'undefined') {\r\n   CustomEvent.prototype = window.Event.prototype\r\n }\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n","class TributeEvents {\r\n  constructor(tribute) {\r\n    this.tribute = tribute;\r\n    this.tribute.events = this;\r\n  }\r\n\r\n  static keys() {\r\n    return [\r\n      {\r\n        key: 9,\r\n        value: \"TAB\"\r\n      },\r\n      {\r\n        key: 8,\r\n        value: \"DELETE\"\r\n      },\r\n      {\r\n        key: 13,\r\n        value: \"ENTER\"\r\n      },\r\n      {\r\n        key: 27,\r\n        value: \"ESCAPE\"\r\n      },\r\n      {\r\n        key: 32,\r\n        value: \"SPACE\"\r\n      },\r\n      {\r\n        key: 38,\r\n        value: \"UP\"\r\n      },\r\n      {\r\n        key: 40,\r\n        value: \"DOWN\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  bind(element) {\r\n    element.boundKeydown = this.keydown.bind(element, this);\r\n    element.boundKeyup = this.keyup.bind(element, this);\r\n    element.boundInput = this.input.bind(element, this);\r\n\r\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\r\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\r\n    element.addEventListener(\"input\", element.boundInput, true);\r\n  }\r\n\r\n  unbind(element) {\r\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\r\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\r\n    element.removeEventListener(\"input\", element.boundInput, true);\r\n\r\n    delete element.boundKeydown;\r\n    delete element.boundKeyup;\r\n    delete element.boundInput;\r\n  }\r\n\r\n  keydown(instance, event) {\r\n    if (instance.shouldDeactivate(event)) {\r\n      instance.tribute.isActive = false;\r\n      instance.tribute.hideMenu();\r\n    }\r\n\r\n    let element = this;\r\n    instance.commandEvent = false;\r\n\r\n    TributeEvents.keys().forEach(o => {\r\n      if (o.key === event.keyCode) {\r\n        instance.commandEvent = true;\r\n        instance.callbacks()[o.value.toLowerCase()](event, element);\r\n      }\r\n    });\r\n  }\r\n\r\n  input(instance, event) {\r\n    instance.inputEvent = true;\r\n    instance.keyup.call(this, instance, event);\r\n  }\r\n\r\n  click(instance, event) {\r\n    let tribute = instance.tribute;\r\n    if (tribute.menu && tribute.menu.contains(event.target)) {\r\n      let li = event.target;\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      while (li.nodeName.toLowerCase() !== \"li\") {\r\n        li = li.parentNode;\r\n        if (!li || li === tribute.menu) {\r\n          throw new Error(\"cannot find the <li> container for the click\");\r\n        }\r\n      }\r\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\r\n      tribute.hideMenu();\r\n\r\n      // TODO: should fire with externalTrigger and target is outside of menu\r\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\r\n      tribute.current.externalTrigger = false;\r\n      setTimeout(() => tribute.hideMenu());\r\n    }\r\n  }\r\n\r\n  keyup(instance, event) {\r\n    if (instance.inputEvent) {\r\n      instance.inputEvent = false;\r\n    }\r\n    instance.updateSelection(this);\r\n\r\n    if (!event.keyCode || event.keyCode === 27) return;\r\n\r\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\r\n      instance.tribute.hasTrailingSpace = false;\r\n      instance.commandEvent = true;\r\n      instance.callbacks()[\"space\"](event, this);\r\n      return;\r\n    }\r\n\r\n    if (!instance.tribute.isActive) {\r\n      if (instance.tribute.autocompleteMode) {\r\n        instance.callbacks().triggerChar(event, this, \"\");\r\n      } else {\r\n        let keyCode = instance.getKeyCode(instance, this, event);\r\n\r\n        if (isNaN(keyCode) || !keyCode) return;\r\n\r\n        let trigger = instance.tribute.triggers().find(trigger => {\r\n          return trigger.charCodeAt(0) === keyCode;\r\n        });\r\n\r\n        if (typeof trigger !== \"undefined\") {\r\n          instance.callbacks().triggerChar(event, this, trigger);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      instance.tribute.current.mentionText.length <\r\n      instance.tribute.current.collection.menuShowMinLength\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      ((instance.tribute.current.trigger ||\r\n        instance.tribute.autocompleteMode) &&\r\n        instance.commandEvent === false) ||\r\n      (instance.tribute.isActive && event.keyCode === 8)\r\n    ) {\r\n      instance.tribute.showMenuFor(this, true);\r\n    }\r\n  }\r\n\r\n  shouldDeactivate(event) {\r\n    if (!this.tribute.isActive) return false;\r\n\r\n    if (this.tribute.current.mentionText.length === 0) {\r\n      let eventKeyPressed = false;\r\n      TributeEvents.keys().forEach(o => {\r\n        if (event.keyCode === o.key) eventKeyPressed = true;\r\n      });\r\n\r\n      return !eventKeyPressed;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getKeyCode(instance, el, event) {\r\n    let char;\r\n    let tribute = instance.tribute;\r\n    let info = tribute.range.getTriggerInfo(\r\n      false,\r\n      tribute.hasTrailingSpace,\r\n      true,\r\n      tribute.allowSpaces,\r\n      tribute.autocompleteMode\r\n    );\r\n\r\n    if (info) {\r\n      return info.mentionTriggerChar.charCodeAt(0);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  updateSelection(el) {\r\n    this.tribute.current.element = el;\r\n    let info = this.tribute.range.getTriggerInfo(\r\n      false,\r\n      this.tribute.hasTrailingSpace,\r\n      true,\r\n      this.tribute.allowSpaces,\r\n      this.tribute.autocompleteMode\r\n    );\r\n\r\n    if (info) {\r\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\r\n      this.tribute.current.mentionText = info.mentionText;\r\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\r\n    }\r\n  }\r\n\r\n  callbacks() {\r\n    return {\r\n      triggerChar: (e, el, trigger) => {\r\n        let tribute = this.tribute;\r\n        tribute.current.trigger = trigger;\r\n\r\n        let collectionItem = tribute.collection.find(item => {\r\n          return item.trigger === trigger;\r\n        });\r\n\r\n        tribute.current.collection = collectionItem;\r\n\r\n        if (\r\n          tribute.current.mentionText.length >=\r\n            tribute.current.collection.menuShowMinLength &&\r\n          tribute.inputEvent\r\n        ) {\r\n          tribute.showMenuFor(el, true);\r\n        }\r\n      },\r\n      enter: (e, el) => {\r\n        // choose selection\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          setTimeout(() => {\r\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\r\n            this.tribute.hideMenu();\r\n          }, 0);\r\n        }\r\n      },\r\n      escape: (e, el) => {\r\n        if (this.tribute.isActive) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          this.tribute.isActive = false;\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      tab: (e, el) => {\r\n        // choose first match\r\n        this.callbacks().enter(e, el);\r\n      },\r\n      space: (e, el) => {\r\n        if (this.tribute.isActive) {\r\n          if (this.tribute.spaceSelectsMatch) {\r\n            this.callbacks().enter(e, el);\r\n          } else if (!this.tribute.allowSpaces) {\r\n            e.stopPropagation();\r\n            setTimeout(() => {\r\n              this.tribute.hideMenu();\r\n              this.tribute.isActive = false;\r\n            }, 0);\r\n          }\r\n        }\r\n      },\r\n      up: (e, el) => {\r\n        // navigate up ul\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          let count = this.tribute.current.filteredItems.length,\r\n            selected = this.tribute.menuSelected;\r\n\r\n          if (count > selected && selected > 0) {\r\n            this.tribute.menuSelected--;\r\n            this.setActiveLi();\r\n          } else if (selected === 0) {\r\n            this.tribute.menuSelected = count - 1;\r\n            this.setActiveLi();\r\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\r\n          }\r\n        }\r\n      },\r\n      down: (e, el) => {\r\n        // navigate down ul\r\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          let count = this.tribute.current.filteredItems.length - 1,\r\n            selected = this.tribute.menuSelected;\r\n\r\n          if (count > selected) {\r\n            this.tribute.menuSelected++;\r\n            this.setActiveLi();\r\n          } else if (count === selected) {\r\n            this.tribute.menuSelected = 0;\r\n            this.setActiveLi();\r\n            this.tribute.menu.scrollTop = 0;\r\n          }\r\n        }\r\n      },\r\n      delete: (e, el) => {\r\n        if (\r\n          this.tribute.isActive &&\r\n          this.tribute.current.mentionText.length < 1\r\n        ) {\r\n          this.tribute.hideMenu();\r\n        } else if (this.tribute.isActive) {\r\n          this.tribute.showMenuFor(el);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setActiveLi(index) {\r\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\r\n      length = lis.length >>> 0;\r\n\r\n    if (index) this.tribute.menuSelected = parseInt(index);\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      let li = lis[i];\r\n      if (i === this.tribute.menuSelected) {\r\n        li.classList.add(this.tribute.current.collection.selectClass);\r\n\r\n        let liClientRect = li.getBoundingClientRect();\r\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\r\n\r\n        if (liClientRect.bottom > menuClientRect.bottom) {\r\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\r\n          this.tribute.menu.scrollTop += scrollDistance;\r\n        } else if (liClientRect.top < menuClientRect.top) {\r\n          let scrollDistance = menuClientRect.top - liClientRect.top;\r\n          this.tribute.menu.scrollTop -= scrollDistance;\r\n        }\r\n      } else {\r\n        li.classList.remove(this.tribute.current.collection.selectClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFullHeight(elem, includeMargin) {\r\n    let height = elem.getBoundingClientRect().height;\r\n\r\n    if (includeMargin) {\r\n      let style = elem.currentStyle || window.getComputedStyle(elem);\r\n      return (\r\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\r\n      );\r\n    }\r\n\r\n    return height;\r\n  }\r\n}\r\n\r\nexport default TributeEvents;\r\n","class TributeMenuEvents {\r\n  constructor(tribute) {\r\n    this.tribute = tribute;\r\n    this.tribute.menuEvents = this;\r\n    this.menu = this.tribute.menu;\r\n  }\r\n\r\n  bind(menu) {\r\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\r\n    this.menuContainerScrollEvent = this.debounce(\r\n      () => {\r\n        if (this.tribute.isActive) {\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      10,\r\n      false\r\n    );\r\n    this.windowResizeEvent = this.debounce(\r\n      () => {\r\n        if (this.tribute.isActive) {\r\n          this.tribute.hideMenu();\r\n        }\r\n      },\r\n      10,\r\n      false\r\n    );\r\n\r\n    // fixes IE11 issues with mousedown\r\n    this.tribute.range\r\n      .getDocument()\r\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\r\n    this.tribute.range\r\n      .getDocument()\r\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\r\n    window.addEventListener(\"resize\", this.windowResizeEvent);\r\n\r\n    if (this.menuContainer) {\r\n      this.menuContainer.addEventListener(\r\n        \"scroll\",\r\n        this.menuContainerScrollEvent,\r\n        false\r\n      );\r\n    } else {\r\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\r\n    }\r\n  }\r\n\r\n  unbind(menu) {\r\n    this.tribute.range\r\n      .getDocument()\r\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\r\n    this.tribute.range\r\n      .getDocument()\r\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\r\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\r\n\r\n    if (this.menuContainer) {\r\n      this.menuContainer.removeEventListener(\r\n        \"scroll\",\r\n        this.menuContainerScrollEvent,\r\n        false\r\n      );\r\n    } else {\r\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\r\n    }\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return () => {\r\n      var context = this,\r\n        args = arguments;\r\n      var later = () => {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      var callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  }\r\n}\r\n\r\nexport default TributeMenuEvents;\r\n","// Thanks to https://github.com/jeff-collins/ment.io\r\nimport \"./utils\";\r\n\r\nclass TributeRange {\r\n    constructor(tribute) {\r\n        this.tribute = tribute\r\n        this.tribute.range = this\r\n    }\r\n\r\n    getDocument() {\r\n        let iframe\r\n        if (this.tribute.current.collection) {\r\n            iframe = this.tribute.current.collection.iframe\r\n        }\r\n\r\n        if (!iframe) {\r\n            return document\r\n        }\r\n\r\n        return iframe.contentWindow.document\r\n    }\r\n\r\n    positionMenuAtCaret(scrollTo) {\r\n        let context = this.tribute.current,\r\n            coordinates\r\n\r\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\r\n\r\n        if (typeof info !== 'undefined') {\r\n\r\n            if(!this.tribute.positionMenu){\r\n                this.tribute.menu.style.cssText = `display: block;`\r\n                return\r\n            }\r\n\r\n            if (!this.isContentEditable(context.element)) {\r\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\r\n                    info.mentionPosition)\r\n            }\r\n            else {\r\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\r\n            }\r\n\r\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\r\n                                     left: ${coordinates.left}px;\r\n                                     right: ${coordinates.right}px;\r\n                                     bottom: ${coordinates.bottom}px;\r\n                                     max-height: ${coordinates.maxHeight || 500}px;\r\n                                     max-width: ${coordinates.maxWidth || 300}px;\r\n                                     position: ${coordinates.position || 'absolute'};\r\n                                     display: block;`\r\n\r\n            if (coordinates.left === 'auto') {\r\n                this.tribute.menu.style.left = 'auto'\r\n            }\r\n\r\n            if (coordinates.top === 'auto') {\r\n                this.tribute.menu.style.top = 'auto'\r\n            }\r\n\r\n            if (scrollTo) this.scrollIntoView()\r\n\r\n        } else {\r\n            this.tribute.menu.style.cssText = 'display: none'\r\n        }\r\n    }\r\n\r\n    get menuContainerIsBody() {\r\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\r\n    }\r\n\r\n\r\n    selectElement(targetElement, path, offset) {\r\n        let range\r\n        let elem = targetElement\r\n\r\n        if (path) {\r\n            for (var i = 0; i < path.length; i++) {\r\n                elem = elem.childNodes[path[i]]\r\n                if (elem === undefined) {\r\n                    return\r\n                }\r\n                while (elem.length < offset) {\r\n                    offset -= elem.length\r\n                    elem = elem.nextSibling\r\n                }\r\n                if (elem.childNodes.length === 0 && !elem.length) {\r\n                    elem = elem.previousSibling\r\n                }\r\n            }\r\n        }\r\n        let sel = this.getWindowSelection()\r\n\r\n        range = this.getDocument().createRange()\r\n        range.setStart(elem, offset)\r\n        range.setEnd(elem, offset)\r\n        range.collapse(true)\r\n\r\n        try {\r\n            sel.removeAllRanges()\r\n        } catch (error) {}\r\n\r\n        sel.addRange(range)\r\n        targetElement.focus()\r\n    }\r\n\r\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\r\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\r\n\r\n        if (info !== undefined) {\r\n            let context = this.tribute.current\r\n            let replaceEvent = new CustomEvent('tribute-replaced', {\r\n                detail: {\r\n                    item: item,\r\n                    instance: context,\r\n                    context: info,\r\n                    event: originalEvent,\r\n                }\r\n            })\r\n\r\n            if (!this.isContentEditable(context.element)) {\r\n                let myField = this.tribute.current.element\r\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\r\n                    ? this.tribute.replaceTextSuffix\r\n                    : ' '\r\n                text += textSuffix\r\n                let startPos = info.mentionPosition\r\n                let endPos = info.mentionPosition + info.mentionText.length + (textSuffix === '' ? 1 : textSuffix.length)\r\n                if (!this.tribute.autocompleteMode) {\r\n                    endPos += info.mentionTriggerChar.length - 1\r\n                }\r\n                myField.value = myField.value.substring(0, startPos) + text +\r\n                    myField.value.substring(endPos, myField.value.length)\r\n                myField.selectionStart = startPos + text.length\r\n                myField.selectionEnd = startPos + text.length\r\n            } else {\r\n                // add a space to the end of the pasted text\r\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\r\n                    ? this.tribute.replaceTextSuffix\r\n                    : '\\xA0'\r\n                text += textSuffix\r\n                let endPos = info.mentionPosition + info.mentionText.length\r\n                if (!this.tribute.autocompleteMode) {\r\n                    endPos += info.mentionTriggerChar.length\r\n                }\r\n                this.pasteHtml(text, info.mentionPosition, endPos)\r\n            }\r\n\r\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\r\n            context.element.dispatchEvent(replaceEvent)\r\n        }\r\n    }\r\n\r\n    pasteHtml(html, startPos, endPos) {\r\n        let range, sel\r\n        sel = this.getWindowSelection()\r\n        range = this.getDocument().createRange()\r\n        range.setStart(sel.anchorNode, startPos)\r\n        range.setEnd(sel.anchorNode, endPos)\r\n        range.deleteContents()\r\n\r\n        let el = this.getDocument().createElement('div')\r\n        el.innerHTML = html\r\n        let frag = this.getDocument().createDocumentFragment(),\r\n            node, lastNode\r\n        while ((node = el.firstChild)) {\r\n            lastNode = frag.appendChild(node)\r\n        }\r\n        range.insertNode(frag)\r\n\r\n        // Preserve the selection\r\n        if (lastNode) {\r\n            range = range.cloneRange()\r\n            range.setStartAfter(lastNode)\r\n            range.collapse(true)\r\n            sel.removeAllRanges()\r\n            sel.addRange(range)\r\n        }\r\n    }\r\n\r\n    getWindowSelection() {\r\n         const {tribute: {current: {element: {ownerDocument}}}} = this\r\n        if (ownerDocument) {\r\n            return ownerDocument.getSelection()\r\n        }\r\n\r\n        return window.getSelection()\r\n    }\r\n\r\n    getNodePositionInParent(element) {\r\n        if (element.parentNode === null) {\r\n            return 0\r\n        }\r\n\r\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\r\n            let node = element.parentNode.childNodes[i]\r\n\r\n            if (node === element) {\r\n                return i\r\n            }\r\n        }\r\n    }\r\n\r\n    getContentEditableSelectedPath(ctx) {\r\n        let sel = this.getWindowSelection()\r\n        let selected = sel.anchorNode\r\n        let path = []\r\n        let offset\r\n\r\n        if (selected != null) {\r\n            let i\r\n            let ce = selected.contentEditable\r\n            while (selected !== null && ce !== 'true') {\r\n                i = this.getNodePositionInParent(selected)\r\n                path.push(i)\r\n                selected = selected.parentNode\r\n                if (selected !== null) {\r\n                    ce = selected.contentEditable\r\n                }\r\n            }\r\n            path.reverse()\r\n\r\n            // getRangeAt may not exist, need alternative\r\n            offset = sel.getRangeAt(0).startOffset\r\n\r\n            return {\r\n                selected: selected,\r\n                path: path,\r\n                offset: offset\r\n            }\r\n        }\r\n    }\r\n\r\n    getTextPrecedingCurrentSelection() {\r\n        let context = this.tribute.current,\r\n            text = ''\r\n\r\n        if (!this.isContentEditable(context.element)) {\r\n            let textComponent = this.tribute.current.element;\r\n            if (textComponent) {\r\n                let startPos = textComponent.selectionStart\r\n                if (textComponent.value && startPos >= 0) {\r\n                    text = textComponent.value.substring(0, startPos)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            let selectedElem = this.getWindowSelection().anchorNode\r\n\r\n            if (selectedElem != null) {\r\n                let workingNodeContent = selectedElem.textContent\r\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\r\n\r\n                if (workingNodeContent && selectStartOffset >= 0) {\r\n                    text = workingNodeContent.substring(0, selectStartOffset)\r\n                }\r\n            }\r\n        }\r\n\r\n        return text\r\n    }\r\n\r\n    getLastWordInText(text) {\r\n        var wordsArray;\r\n        if (this.tribute.autocompleteSeparator) {\r\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\r\n        } else {\r\n            wordsArray = text.split(/\\s+/);\r\n        }\r\n        var wordsCount = wordsArray.length - 1;\r\n        return wordsArray[wordsCount];\r\n    }\r\n\r\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\r\n        let ctx = this.tribute.current\r\n        let selected, path, offset\r\n\r\n        if (!this.isContentEditable(ctx.element)) {\r\n            selected = this.tribute.current.element\r\n        } else {\r\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\r\n\r\n            if (selectionInfo) {\r\n                selected = selectionInfo.selected\r\n                path = selectionInfo.path\r\n                offset = selectionInfo.offset\r\n            }\r\n        }\r\n\r\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\r\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\r\n\r\n        if (isAutocomplete) {\r\n            return {\r\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\r\n                mentionText: lastWordOfEffectiveRange,\r\n                mentionSelectedElement: selected,\r\n                mentionSelectedPath: path,\r\n                mentionSelectedOffset: offset\r\n            }\r\n        }\r\n\r\n        if (effectiveRange !== undefined && effectiveRange !== null) {\r\n            let mostRecentTriggerCharPos = -1\r\n            let triggerChar\r\n\r\n            this.tribute.collection.forEach(config => {\r\n                let c = config.trigger\r\n                let idx = config.requireLeadingSpace ?\r\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\r\n                    effectiveRange.lastIndexOf(c)\r\n\r\n                if (idx > mostRecentTriggerCharPos) {\r\n                    mostRecentTriggerCharPos = idx\r\n                    triggerChar = c\r\n                    requireLeadingSpace = config.requireLeadingSpace\r\n                }\r\n            })\r\n\r\n            if (mostRecentTriggerCharPos >= 0 &&\r\n                (\r\n                    mostRecentTriggerCharPos === 0 ||\r\n                    !requireLeadingSpace ||\r\n                    /\\s/.test(\r\n                        effectiveRange.substring(\r\n                            mostRecentTriggerCharPos - 1,\r\n                            mostRecentTriggerCharPos)\r\n                    )\r\n                )\r\n            ) {\r\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\r\n                    effectiveRange.length)\r\n\r\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\r\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\r\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\r\n                    (\r\n                        firstSnippetChar === ' ' ||\r\n                        firstSnippetChar === '\\xA0'\r\n                    )\r\n                if (hasTrailingSpace) {\r\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\r\n                }\r\n\r\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\r\n\r\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\r\n\r\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\r\n                    return {\r\n                        mentionPosition: mostRecentTriggerCharPos,\r\n                        mentionText: currentTriggerSnippet,\r\n                        mentionSelectedElement: selected,\r\n                        mentionSelectedPath: path,\r\n                        mentionSelectedOffset: offset,\r\n                        mentionTriggerChar: triggerChar\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    lastIndexWithLeadingSpace (str, trigger) {\r\n        let reversedStr = str.split('').reverse().join('')\r\n        let index = -1\r\n\r\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\r\n            let firstChar = cidx === str.length - 1\r\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\r\n\r\n            let match = true\r\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\r\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\r\n                match = false\r\n                break\r\n              }\r\n            }\r\n\r\n            if (match && (firstChar || leadingSpace)) {\r\n                index = str.length - 1 - cidx\r\n                break\r\n            }\r\n        }\r\n\r\n        return index\r\n    }\r\n\r\n    isContentEditable(element) {\r\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\r\n    }\r\n\r\n    isMenuOffScreen(coordinates, menuDimensions) {\r\n        let windowWidth = window.innerWidth\r\n        let windowHeight = window.innerHeight\r\n        let doc = document.documentElement\r\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\r\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\r\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\r\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\r\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\r\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\r\n\r\n        return {\r\n            top: menuTop < Math.floor(windowTop),\r\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\r\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\r\n            left: menuLeft < Math.floor(windowLeft)\r\n        }\r\n    }\r\n\r\n    getMenuDimensions() {\r\n        // Width of the menu depends of its contents and position\r\n        // We must check what its width would be without any obstruction\r\n        // This way, we can achieve good positioning for flipping the menu\r\n        let dimensions = {\r\n            width: null,\r\n            height: null\r\n        }\r\n\r\n        this.tribute.menu.style.cssText = `top: 0px;\r\n                                 left: 0px;\r\n                                 position: fixed;\r\n                                 display: block;\r\n                                 visibility; hidden;\r\n                                 max-height:500px;`\r\n       dimensions.width = this.tribute.menu.offsetWidth\r\n       dimensions.height = this.tribute.menu.offsetHeight\r\n\r\n       this.tribute.menu.style.cssText = `display: none;`\r\n\r\n       return dimensions\r\n    }\r\n\r\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\r\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\r\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\r\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\r\n            'paddingRight', 'paddingBottom', 'paddingLeft',\r\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\r\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\r\n            'textAlign', 'textTransform', 'textIndent',\r\n            'textDecoration', 'letterSpacing', 'wordSpacing'\r\n        ]\r\n\r\n        let isFirefox = (window.mozInnerScreenX !== null)\r\n\r\n        let div = this.getDocument().createElement('div')\r\n        div.id = 'input-textarea-caret-position-mirror-div'\r\n        this.getDocument().body.appendChild(div)\r\n\r\n        let style = div.style\r\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\r\n\r\n        style.whiteSpace = 'pre-wrap'\r\n        if (element.nodeName !== 'INPUT') {\r\n            style.wordWrap = 'break-word'\r\n        }\r\n\r\n        style.position = 'absolute'\r\n        style.visibility = 'hidden'\r\n\r\n        // transfer the element's properties to the div\r\n        properties.forEach(prop => {\r\n            style[prop] = computed[prop]\r\n        })\r\n\r\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\r\n        // if (isFirefox) {\r\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\r\n        //     if (element.scrollHeight > parseInt(computed.height))\r\n        //         style.overflowY = 'scroll'\r\n        // } else {\r\n        //     style.overflow = 'hidden'\r\n        // }\r\n\r\n        let span0 = document.createElement('span')\r\n        span0.textContent =  element.value.substring(0, position)\r\n        div.appendChild(span0)\r\n\r\n        if (element.nodeName === 'INPUT') {\r\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\r\n        }\r\n\r\n        //Create a span in the div that represents where the cursor\r\n        //should be\r\n        let span = this.getDocument().createElement('span')\r\n        //we give it no content as this represents the cursor\r\n        span.textContent = '&#x200B;'\r\n        div.appendChild(span)\r\n\r\n        let span2 = this.getDocument().createElement('span');\r\n        span2.textContent = element.value.substring(position);\r\n        div.appendChild(span2);\r\n\r\n        let rect = element.getBoundingClientRect()\r\n\r\n        //position the div exactly over the element\r\n        //so we can get the bounding client rect for the span and\r\n        //it should represent exactly where the cursor is\r\n        div.style.position = 'fixed';\r\n        div.style.left = rect.left + 'px';\r\n        div.style.top = rect.top + 'px';\r\n        div.style.width = rect.width + 'px';\r\n        div.style.height = rect.height + 'px';\r\n        div.scrollTop = element.scrollTop;\r\n\r\n        var spanRect = span.getBoundingClientRect();\r\n        this.getDocument().body.removeChild(div)\r\n        return this.getFixedCoordinatesRelativeToRect(spanRect);\r\n    }\r\n\r\n    getContentEditableCaretPosition(selectedNodePosition) {\r\n        let range\r\n        let sel = this.getWindowSelection()\r\n\r\n        range = this.getDocument().createRange()\r\n        range.setStart(sel.anchorNode, selectedNodePosition)\r\n        range.setEnd(sel.anchorNode, selectedNodePosition)\r\n\r\n        range.collapse(false)\r\n\r\n        let rect = range.getBoundingClientRect()\r\n\r\n        return this.getFixedCoordinatesRelativeToRect(rect);\r\n    }\r\n\r\n    getFixedCoordinatesRelativeToRect(rect) {\r\n        let coordinates = {\r\n            position: 'fixed',\r\n            left: rect.left,\r\n            top: rect.top + rect.height\r\n        }\r\n\r\n        let menuDimensions = this.getMenuDimensions()\r\n\r\n        var availableSpaceOnTop = rect.top;\r\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\r\n\r\n        //check to see where's the right place to put the menu vertically\r\n        if (availableSpaceOnBottom < menuDimensions.height) {\r\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\r\n            coordinates.top = 'auto';\r\n            coordinates.bottom = window.innerHeight - rect.top;\r\n            if (availableSpaceOnBottom < menuDimensions.height) {\r\n              coordinates.maxHeight = availableSpaceOnTop;\r\n            }\r\n          } else {\r\n            if (availableSpaceOnTop < menuDimensions.height) {\r\n              coordinates.maxHeight = availableSpaceOnBottom;\r\n            }\r\n          }\r\n        }\r\n\r\n        var availableSpaceOnLeft = rect.left;\r\n        var availableSpaceOnRight = window.innerWidth - rect.left;\r\n\r\n        //check to see where's the right place to put the menu horizontally\r\n        if (availableSpaceOnRight < menuDimensions.width) {\r\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\r\n            coordinates.left = 'auto';\r\n            coordinates.right = window.innerWidth - rect.left;\r\n            if (availableSpaceOnRight < menuDimensions.width) {\r\n              coordinates.maxWidth = availableSpaceOnLeft;\r\n            }\r\n          } else {\r\n            if (availableSpaceOnLeft < menuDimensions.width) {\r\n              coordinates.maxWidth = availableSpaceOnRight;\r\n            }\r\n          }\r\n        }\r\n\r\n        return coordinates\r\n    }\r\n\r\n    scrollIntoView(elem) {\r\n        let reasonableBuffer = 20,\r\n            clientRect\r\n        let maxScrollDisplacement = 100\r\n        let e = this.menu\r\n\r\n        if (typeof e === 'undefined') return;\r\n\r\n        while (clientRect === undefined || clientRect.height === 0) {\r\n            clientRect = e.getBoundingClientRect()\r\n\r\n            if (clientRect.height === 0) {\r\n                e = e.childNodes[0]\r\n                if (e === undefined || !e.getBoundingClientRect) {\r\n                    return\r\n                }\r\n            }\r\n        }\r\n\r\n        let elemTop = clientRect.top\r\n        let elemBottom = elemTop + clientRect.height\r\n\r\n        if (elemTop < 0) {\r\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\r\n        } else if (elemBottom > window.innerHeight) {\r\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\r\n\r\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\r\n                maxY = window.pageYOffset + maxScrollDisplacement\r\n            }\r\n\r\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\r\n\r\n            if (targetY > maxY) {\r\n                targetY = maxY\r\n            }\r\n\r\n            window.scrollTo(0, targetY)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default TributeRange;\r\n","// Thanks to https://github.com/mattyork/fuzzy\r\nclass TributeSearch {\r\n    constructor(tribute) {\r\n        this.tribute = tribute\r\n        this.tribute.search = this\r\n    }\r\n\r\n    simpleFilter(pattern, array) {\r\n        return array.filter(string => {\r\n            return this.test(pattern, string)\r\n        })\r\n    }\r\n\r\n    test(pattern, string) {\r\n        return this.match(pattern, string) !== null\r\n    }\r\n\r\n    match(pattern, string, opts) {\r\n        opts = opts || {}\r\n        let patternIdx = 0,\r\n            result = [],\r\n            len = string.length,\r\n            totalScore = 0,\r\n            currScore = 0,\r\n            pre = opts.pre || '',\r\n            post = opts.post || '',\r\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\r\n            ch, compareChar\r\n\r\n        if (opts.skip) {\r\n            return {rendered: string, score: 0}\r\n        }\r\n\r\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\r\n\r\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\r\n        if (!patternCache) {\r\n            return null\r\n        }\r\n        return {\r\n            rendered: this.render(string, patternCache.cache, pre, post),\r\n            score: patternCache.score\r\n        }\r\n    }\r\n\r\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\r\n        if (this.tribute.autocompleteSeparator) {\r\n            // if the pattern search at end\r\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\r\n        }\r\n\r\n        if (pattern.length === patternIndex) {\r\n\r\n            // calculate score and copy the cache containing the indices where it's found\r\n            return {\r\n                score: this.calculateScore(patternCache),\r\n                cache: patternCache.slice()\r\n            }\r\n        }\r\n\r\n        // if string at end or remaining pattern > remaining string\r\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\r\n            return undefined\r\n        }\r\n\r\n        let c = pattern[patternIndex]\r\n        let index = string.indexOf(c, stringIndex)\r\n        let best, temp\r\n\r\n        while (index > -1) {\r\n            patternCache.push(index)\r\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\r\n            patternCache.pop()\r\n\r\n            // if downstream traversal failed, return best answer so far\r\n            if (!temp) {\r\n                return best\r\n            }\r\n\r\n            if (!best || best.score < temp.score) {\r\n                best = temp\r\n            }\r\n\r\n            index = string.indexOf(c, index + 1)\r\n        }\r\n\r\n        return best\r\n    }\r\n\r\n    calculateScore(patternCache) {\r\n        let score = 0\r\n        let temp = 1\r\n\r\n        patternCache.forEach((index, i) => {\r\n            if (i > 0) {\r\n                if (patternCache[i - 1] + 1 === index) {\r\n                    temp += temp + 1\r\n                }\r\n                else {\r\n                    temp = 1\r\n                }\r\n            }\r\n\r\n            score += temp\r\n        })\r\n\r\n        return score\r\n    }\r\n\r\n    render(string, indices, pre, post) {\r\n        var rendered = string.substring(0, indices[0])\r\n\r\n        indices.forEach((index, i) => {\r\n            rendered += pre + string[index] + post +\r\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\r\n        })\r\n\r\n        return rendered\r\n    }\r\n\r\n    filter(pattern, arr, opts) {\r\n        opts = opts || {}\r\n        return arr\r\n            .reduce((prev, element, idx, arr) => {\r\n                let str = element\r\n\r\n                if (opts.extract) {\r\n                    str = opts.extract(element)\r\n\r\n                    if (!str) { // take care of undefineds / nulls / etc.\r\n                        str = ''\r\n                    }\r\n                }\r\n\r\n                let rendered = this.match(pattern, str, opts)\r\n\r\n                if (rendered != null) {\r\n                    prev[prev.length] = {\r\n                        string: rendered.rendered,\r\n                        score: rendered.score,\r\n                        index: idx,\r\n                        original: element\r\n                    }\r\n                }\r\n\r\n                return prev\r\n            }, [])\r\n\r\n        .sort((a, b) => {\r\n            let compare = b.score - a.score\r\n            if (compare) return compare\r\n            return a.index - b.index\r\n        })\r\n    }\r\n}\r\n\r\nexport default TributeSearch;\r\n","import \"./utils\";\r\nimport TributeEvents from \"./TributeEvents\";\r\nimport TributeMenuEvents from \"./TributeMenuEvents\";\r\nimport TributeRange from \"./TributeRange\";\r\nimport TributeSearch from \"./TributeSearch\";\r\n\r\nclass Tribute {\r\n  constructor({\r\n    values = null,\r\n    loadingItemTemplate = null,\r\n    iframe = null,\r\n    selectClass = \"highlight\",\r\n    containerClass = \"tribute-container\",\r\n    itemClass = \"\",\r\n    trigger = \"@\",\r\n    autocompleteMode = false,\r\n    autocompleteSeparator = null,\r\n    selectTemplate = null,\r\n    menuItemTemplate = null,\r\n    lookup = \"key\",\r\n    fillAttr = \"value\",\r\n    collection = null,\r\n    menuContainer = null,\r\n    noMatchTemplate = null,\r\n    requireLeadingSpace = true,\r\n    allowSpaces = false,\r\n    replaceTextSuffix = null,\r\n    positionMenu = true,\r\n    spaceSelectsMatch = false,\r\n    searchOpts = {},\r\n    menuItemLimit = null,\r\n    menuShowMinLength = 0\r\n  }) {\r\n    this.autocompleteMode = autocompleteMode;\r\n    this.autocompleteSeparator = autocompleteSeparator;\r\n    this.menuSelected = 0;\r\n    this.current = {};\r\n    this.inputEvent = false;\r\n    this.isActive = false;\r\n    this.menuContainer = menuContainer;\r\n    this.allowSpaces = allowSpaces;\r\n    this.replaceTextSuffix = replaceTextSuffix;\r\n    this.positionMenu = positionMenu;\r\n    this.hasTrailingSpace = false;\r\n    this.spaceSelectsMatch = spaceSelectsMatch;\r\n\r\n    if (this.autocompleteMode) {\r\n      trigger = \"\";\r\n      allowSpaces = false;\r\n    }\r\n\r\n    if (values) {\r\n      this.collection = [\r\n        {\r\n          // symbol that starts the lookup\r\n          trigger: trigger,\r\n\r\n          // is it wrapped in an iframe\r\n          iframe: iframe,\r\n\r\n          // class applied to selected item\r\n          selectClass: selectClass,\r\n\r\n          // class applied to the Container\r\n          containerClass: containerClass,\r\n\r\n          // class applied to each item\r\n          itemClass: itemClass,\r\n\r\n          // function called on select that retuns the content to insert\r\n          selectTemplate: (\r\n            selectTemplate || Tribute.defaultSelectTemplate\r\n          ).bind(this),\r\n\r\n          // function called that returns content for an item\r\n          menuItemTemplate: (\r\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\r\n          ).bind(this),\r\n\r\n          // function called when menu is empty, disables hiding of menu.\r\n          noMatchTemplate: (t => {\r\n            if (typeof t === \"string\") {\r\n              if (t.trim() === \"\") return null;\r\n              return t;\r\n            }\r\n            if (typeof t === \"function\") {\r\n              return t.bind(this);\r\n            }\r\n\r\n            return (\r\n              noMatchTemplate ||\r\n              function() {\r\n                return \"<li>No Match Found!</li>\";\r\n              }.bind(this)\r\n            );\r\n          })(noMatchTemplate),\r\n\r\n          // column to search against in the object\r\n          lookup: lookup,\r\n\r\n          // column that contains the content to insert by default\r\n          fillAttr: fillAttr,\r\n\r\n          // array of objects or a function returning an array of objects\r\n          values: values,\r\n\r\n          // useful for when values is an async function\r\n          loadingItemTemplate: loadingItemTemplate,\r\n\r\n          requireLeadingSpace: requireLeadingSpace,\r\n\r\n          searchOpts: searchOpts,\r\n\r\n          menuItemLimit: menuItemLimit,\r\n\r\n          menuShowMinLength: menuShowMinLength\r\n        }\r\n      ];\r\n    } else if (collection) {\r\n      if (this.autocompleteMode)\r\n        console.warn(\r\n          \"Tribute in autocomplete mode does not work for collections\"\r\n        );\r\n      this.collection = collection.map(item => {\r\n        return {\r\n          trigger: item.trigger || trigger,\r\n          iframe: item.iframe || iframe,\r\n          selectClass: item.selectClass || selectClass,\r\n          containerClass: item.containerClass || containerClass,\r\n          itemClass: item.itemClass || itemClass,\r\n          selectTemplate: (\r\n            item.selectTemplate || Tribute.defaultSelectTemplate\r\n          ).bind(this),\r\n          menuItemTemplate: (\r\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\r\n          ).bind(this),\r\n          // function called when menu is empty, disables hiding of menu.\r\n          noMatchTemplate: (t => {\r\n            if (typeof t === \"string\") {\r\n              if (t.trim() === \"\") return null;\r\n              return t;\r\n            }\r\n            if (typeof t === \"function\") {\r\n              return t.bind(this);\r\n            }\r\n\r\n            return (\r\n              noMatchTemplate ||\r\n              function() {\r\n                return \"<li>No Match Found!</li>\";\r\n              }.bind(this)\r\n            );\r\n          })(noMatchTemplate),\r\n          lookup: item.lookup || lookup,\r\n          fillAttr: item.fillAttr || fillAttr,\r\n          values: item.values,\r\n          loadingItemTemplate: item.loadingItemTemplate,\r\n          requireLeadingSpace: item.requireLeadingSpace,\r\n          searchOpts: item.searchOpts || searchOpts,\r\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\r\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\r\n        };\r\n      });\r\n    } else {\r\n      throw new Error(\"[Tribute] No collection specified.\");\r\n    }\r\n\r\n    new TributeRange(this);\r\n    new TributeEvents(this);\r\n    new TributeMenuEvents(this);\r\n    new TributeSearch(this);\r\n  }\r\n\r\n  get isActive() {\r\n    return this._isActive;\r\n  }\r\n\r\n  set isActive(val) {\r\n    if (this._isActive != val) {\r\n      this._isActive = val;\r\n      if (this.current.element) {\r\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\r\n        this.current.element.dispatchEvent(noMatchEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  static defaultSelectTemplate(item) {\r\n    if (typeof item === \"undefined\")\r\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\r\n    if (this.range.isContentEditable(this.current.element)) {\r\n      return (\r\n        '<span class=\"tribute-mention\">' +\r\n        (this.current.collection.trigger +\r\n          item.original[this.current.collection.fillAttr]) +\r\n        \"</span>\"\r\n      );\r\n    }\r\n\r\n    return (\r\n      this.current.collection.trigger +\r\n      item.original[this.current.collection.fillAttr]\r\n    );\r\n  }\r\n\r\n  static defaultMenuItemTemplate(matchItem) {\r\n    return matchItem.string;\r\n  }\r\n\r\n  static inputTypes() {\r\n    return [\"TEXTAREA\", \"INPUT\"];\r\n  }\r\n\r\n  triggers() {\r\n    return this.collection.map(config => {\r\n      return config.trigger;\r\n    });\r\n  }\r\n\r\n  attach(el) {\r\n    if (!el) {\r\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\r\n    }\r\n\r\n    // Check if it is a jQuery collection\r\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\r\n      el = el.get();\r\n    }\r\n\r\n    // Is el an Array/Array-like object?\r\n    if (\r\n      el.constructor === NodeList ||\r\n      el.constructor === HTMLCollection ||\r\n      el.constructor === Array\r\n    ) {\r\n      let length = el.length;\r\n      for (var i = 0; i < length; ++i) {\r\n        this._attach(el[i]);\r\n      }\r\n    } else {\r\n      this._attach(el);\r\n    }\r\n  }\r\n\r\n  _attach(el) {\r\n    if (el.hasAttribute(\"data-tribute\")) {\r\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\r\n    }\r\n\r\n    this.ensureEditable(el);\r\n    this.events.bind(el);\r\n    el.setAttribute(\"data-tribute\", true);\r\n  }\r\n\r\n  ensureEditable(element) {\r\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\r\n      if (!element.contentEditable) {\r\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\r\n      }\r\n    }\r\n  }\r\n\r\n  createMenu(containerClass) {\r\n    let wrapper = this.range.getDocument().createElement(\"div\"),\r\n      ul = this.range.getDocument().createElement(\"ul\");\r\n    wrapper.className = containerClass;\r\n    wrapper.appendChild(ul);\r\n\r\n    if (this.menuContainer) {\r\n      return this.menuContainer.appendChild(wrapper);\r\n    }\r\n\r\n    return this.range.getDocument().body.appendChild(wrapper);\r\n  }\r\n\r\n  showMenuFor(element, scrollTo) {\r\n    // Only proceed if menu isn't already shown for the current element & mentionText\r\n    if (\r\n      this.isActive &&\r\n      this.current.element === element &&\r\n      this.current.mentionText === this.currentMentionTextSnapshot\r\n    ) {\r\n      return;\r\n    }\r\n    this.currentMentionTextSnapshot = this.current.mentionText;\r\n\r\n    // create the menu if it doesn't exist.\r\n    if (!this.menu) {\r\n      this.menu = this.createMenu(this.current.collection.containerClass);\r\n      element.tributeMenu = this.menu;\r\n      this.menuEvents.bind(this.menu);\r\n    }\r\n\r\n    this.isActive = true;\r\n    this.menuSelected = 0;\r\n\r\n    if (!this.current.mentionText) {\r\n      this.current.mentionText = \"\";\r\n    }\r\n\r\n    const processValues = values => {\r\n      // Tribute may not be active any more by the time the value callback returns\r\n      if (!this.isActive) {\r\n        return;\r\n      }\r\n\r\n      let items = this.search.filter(this.current.mentionText, values, {\r\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\r\n        post: this.current.collection.searchOpts.post || \"</span>\",\r\n        skip: this.current.collection.searchOpts.skip,\r\n        extract: el => {\r\n          if (typeof this.current.collection.lookup === \"string\") {\r\n            return el[this.current.collection.lookup];\r\n          } else if (typeof this.current.collection.lookup === \"function\") {\r\n            return this.current.collection.lookup(el, this.current.mentionText);\r\n          } else {\r\n            throw new Error(\r\n              \"Invalid lookup attribute, lookup must be string or function.\"\r\n            );\r\n          }\r\n        }\r\n      });\r\n\r\n      if (this.current.collection.menuItemLimit) {\r\n        items = items.slice(0, this.current.collection.menuItemLimit);\r\n      }\r\n\r\n      this.current.filteredItems = items;\r\n\r\n      let ul = this.menu.querySelector(\"ul\");\r\n\r\n      if (!items.length) {\r\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\r\n          detail: this.menu\r\n        });\r\n        this.current.element.dispatchEvent(noMatchEvent);\r\n        if (\r\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\r\n            !this.current.collection.noMatchTemplate()) ||\r\n          !this.current.collection.noMatchTemplate\r\n        ) {\r\n          this.hideMenu();\r\n        } else {\r\n          typeof this.current.collection.noMatchTemplate === \"function\"\r\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\r\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\r\n            this.range.positionMenuAtCaret(scrollTo);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      ul.innerHTML = \"\";\r\n      let fragment = this.range.getDocument().createDocumentFragment();\r\n\r\n      items.forEach((item, index) => {\r\n        let li = this.range.getDocument().createElement(\"li\");\r\n        li.setAttribute(\"data-index\", index);\r\n        li.className = this.current.collection.itemClass;\r\n        li.addEventListener(\"mousemove\", e => {\r\n          let [li, index] = this._findLiTarget(e.target);\r\n          if (e.movementY !== 0) {\r\n            this.events.setActiveLi(index);\r\n          }\r\n        });\r\n        if (this.menuSelected === index) {\r\n          li.classList.add(this.current.collection.selectClass);\r\n        }\r\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\r\n        fragment.appendChild(li);\r\n      });\r\n      ul.appendChild(fragment);\r\n\r\n      this.range.positionMenuAtCaret(scrollTo);\r\n    };\r\n\r\n    if (typeof this.current.collection.values === \"function\") {\r\n      if (this.current.collection.loadingItemTemplate) {\r\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\r\n        this.range.positionMenuAtCaret(scrollTo);\r\n      }\r\n\r\n      this.current.collection.values(this.current.mentionText, processValues);\r\n    } else {\r\n      processValues(this.current.collection.values);\r\n    }\r\n  }\r\n\r\n  _findLiTarget(el) {\r\n    if (!el) return [];\r\n    const index = el.getAttribute(\"data-index\");\r\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\r\n  }\r\n\r\n  showMenuForCollection(element, collectionIndex) {\r\n    if (element !== document.activeElement) {\r\n      this.placeCaretAtEnd(element);\r\n    }\r\n\r\n    this.current.collection = this.collection[collectionIndex || 0];\r\n    this.current.externalTrigger = true;\r\n    this.current.element = element;\r\n\r\n    if (element.isContentEditable)\r\n      this.insertTextAtCursor(this.current.collection.trigger);\r\n    else this.insertAtCaret(element, this.current.collection.trigger);\r\n\r\n    this.showMenuFor(element);\r\n  }\r\n\r\n  // TODO: make sure this works for inputs/textareas\r\n  placeCaretAtEnd(el) {\r\n    el.focus();\r\n    if (\r\n      typeof window.getSelection != \"undefined\" &&\r\n      typeof document.createRange != \"undefined\"\r\n    ) {\r\n      var range = document.createRange();\r\n      range.selectNodeContents(el);\r\n      range.collapse(false);\r\n      var sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    } else if (typeof document.body.createTextRange != \"undefined\") {\r\n      var textRange = document.body.createTextRange();\r\n      textRange.moveToElementText(el);\r\n      textRange.collapse(false);\r\n      textRange.select();\r\n    }\r\n  }\r\n\r\n  // for contenteditable\r\n  insertTextAtCursor(text) {\r\n    var sel, range, html;\r\n    sel = window.getSelection();\r\n    range = sel.getRangeAt(0);\r\n    range.deleteContents();\r\n    var textNode = document.createTextNode(text);\r\n    range.insertNode(textNode);\r\n    range.selectNodeContents(textNode);\r\n    range.collapse(false);\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  }\r\n\r\n  // for regular inputs\r\n  insertAtCaret(textarea, text) {\r\n    var scrollPos = textarea.scrollTop;\r\n    var caretPos = textarea.selectionStart;\r\n\r\n    var front = textarea.value.substring(0, caretPos);\r\n    var back = textarea.value.substring(\r\n      textarea.selectionEnd,\r\n      textarea.value.length\r\n    );\r\n    textarea.value = front + text + back;\r\n    caretPos = caretPos + text.length;\r\n    textarea.selectionStart = caretPos;\r\n    textarea.selectionEnd = caretPos;\r\n    textarea.focus();\r\n    textarea.scrollTop = scrollPos;\r\n  }\r\n\r\n  hideMenu() {\r\n    if (this.menu) {\r\n      this.menu.style.cssText = \"display: none;\";\r\n      this.isActive = false;\r\n      this.menuSelected = 0;\r\n      this.current = {};\r\n    }\r\n  }\r\n\r\n  selectItemAtIndex(index, originalEvent) {\r\n    index = parseInt(index);\r\n    if (typeof index !== \"number\" || isNaN(index)) return;\r\n    let item = this.current.filteredItems[index];\r\n    let content = this.current.collection.selectTemplate(item);\r\n    if (content !== null) this.replaceText(content, originalEvent, item);\r\n  }\r\n\r\n  replaceText(content, originalEvent, item) {\r\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\r\n  }\r\n\r\n  _append(collection, newValues, replace) {\r\n    if (typeof collection.values === \"function\") {\r\n      throw new Error(\"Unable to append to values, as it is a function.\");\r\n    } else if (!replace) {\r\n      collection.values = collection.values.concat(newValues);\r\n    } else {\r\n      collection.values = newValues;\r\n    }\r\n  }\r\n\r\n  append(collectionIndex, newValues, replace) {\r\n    let index = parseInt(collectionIndex);\r\n    if (typeof index !== \"number\")\r\n      throw new Error(\"please provide an index for the collection to update.\");\r\n\r\n    let collection = this.collection[index];\r\n\r\n    this._append(collection, newValues, replace);\r\n  }\r\n\r\n  appendCurrent(newValues, replace) {\r\n    if (this.isActive) {\r\n      this._append(this.current.collection, newValues, replace);\r\n    } else {\r\n      throw new Error(\r\n        \"No active state. Please use append instead and pass an index.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  detach(el) {\r\n    if (!el) {\r\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\r\n    }\r\n\r\n    // Check if it is a jQuery collection\r\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\r\n      el = el.get();\r\n    }\r\n\r\n    // Is el an Array/Array-like object?\r\n    if (\r\n      el.constructor === NodeList ||\r\n      el.constructor === HTMLCollection ||\r\n      el.constructor === Array\r\n    ) {\r\n      let length = el.length;\r\n      for (var i = 0; i < length; ++i) {\r\n        this._detach(el[i]);\r\n      }\r\n    } else {\r\n      this._detach(el);\r\n    }\r\n  }\r\n\r\n  _detach(el) {\r\n    this.events.unbind(el);\r\n    if (el.tributeMenu) {\r\n      this.menuEvents.unbind(el.tributeMenu);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      el.removeAttribute(\"data-tribute\");\r\n      this.isActive = false;\r\n      if (el.tributeMenu) {\r\n        el.tributeMenu.remove();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Tribute;\r\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keys","forEach","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","ownerDocument","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","firstChar","match","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","Math","floor","ceil","dimensions","offsetWidth","offsetHeight","flipped","div","id","body","computed","whiteSpace","wordWrap","visibility","prop","span0","replace","span","span2","rect","spanRect","removeChild","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","positionMenuAtCaret","fragment","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}